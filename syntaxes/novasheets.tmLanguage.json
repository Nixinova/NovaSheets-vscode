{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "NovaSheets",
	"scopeName": "source.nss",
	"patterns": [
		{
			"include": "#variables"
		},
		{
			"include": "#seperator"
		},
		{
			"include": "#comments"
		},
		{
			"include": "#css"
		},
		{
			"include": "#patterns"
		}
	],
	"repository": {
		"variables": {
			"patterns": [
				{
					"match": "^\\s*(@var)\\s([^\\]=)]+?)(\\|[^\\]=)]+?)?(\\s//.+|)$",
					"captures": {
						"1": {
							"name": "keyword.variable.declarator"
						},
						"2": {
							"name": "keyword.other.unit.variable.nsss"
						},
						"3": {
							"name": "keyword.control.variable.attribute.nss"
						},
						"4": {
							"name": "comment.inline.nss"
						}
					}
				},
				{
					"match": "(\\$\\()(.+?)(\\|.*?)?(?:(\\s//.+$)|(\\)))",
					"captures": {
						"1": {
							"name": "keyword.variable.substitutor.nss"
						},
						"2": {
							"name": "keyword.other.unit.variable.nss"
						},
						"3": {
							"name": "keyword.control.variable.attribute.nss"
						},
						"4": {
							"name": "comment.inline.nss"
						},
						"5": {
							"name": "keyword.variable.substitutor.nss"
						}
					}
				},
				{
					"match": "(\\$\\[)(.+?)(\\|.*?)?(?:(\\s//.+$)|(\\]))",
					"captures": {
						"1": {
							"name": "keyword.variable.substitutor.nss"
						},
						"2": {
							"name": "keyword.control.variable.attribute.nss"
						},
						"3": {
							"name": "invalid.illegal.nss"
						},
						"4": {
							"name": "comment.inline.nss"
						},
						"5": {
							"name": "keyword.variable.substitutor.nss"
						}
					}
				}
			]
		},
		"separator": {
			"patterns": [
				{
					"match": "\\s*---\\s*",
					"name": "header.seperator.nss"
				}
			]
		},
		"comments": {
			"patterns": [
				{
					"match": "(\\s|^)//.+$",
					"name": "comment.inline.nss"
				},
				{
					"match": "/\\*.+\\*/",
					"name": "comment.block.css"
				}
			]
		},
		"css": {
			"patterns": [
				{
					"match": "([^@][^{}]*){",
					"captures": {
						"1": {
							"name": "entity.other.attribute-name.class.css"
						}
					}
				},
				{
					"match": "([a-z-]+?([^a-z-; ]*?)[a-z-]+?[^\\\\]):",
					"captures": {
						"1": {
							"name": "support.type.property-name.css"
						},
						"2": {
							"name": "invalid.illegal.css"
						}
					}
				},
				{
					"match": "([a-z-]+)\\s*\\(",
					"captures": {
						"1": {
							"name": "support.function.css"
						}
					}
				},
				{
					"match": "@[a-z]+",
					"name": "keyword.control.at-rule"
				},
				{
					"match": "'.+?[^\\\\]'|\\\".+?[^\\\\]\\\"|\\\"\\\"|''",
					"name": "string.quoted"
				},
				{
					"match": "#[0-9a-fA-F]{8}|#[0-9a-fA-F]{6}|#[0-9a-fA-F]{3,4}",
					"name": "string.unquoted.color.hash.css"
				},
				{
					"match": "!\\s*important",
					"name": "string.regexp"
				}
			]
		},
		"other": {
			"patterns": [
				{
					"match": "[-;,.+*/!%(){}a-zA-Z0-9]",
					"name": "entity.constant.character"
				},
				{
					"match": ".",
					"name": "invalid"
				}
			]
		}
	}
}