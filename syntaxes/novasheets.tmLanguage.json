{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "NovaSheets",
	"scopeName": "source.nss",
	"patterns": [
		{
			"include": "#variable_declaration"
		},
		{
			"include": "#variable"
		},
		{
			"include": "#parameter"
		},
		{
			"include": "#separator"
		},
		{
			"include": "#comments"
		},
		{
			"include": "#css"
		},
		{
			"include": "#other"
		}
	],
	"repository": {
		"variable_declaration": {
			"match": "^\\s*(@var)\\s+([^=)\\]]+?)(\\|[^=)\\]]+?)?(\\s//.+|)$",
			"captures": {
				"1": {
					"name": "keyword.variable.declarator"
				},
				"2": {
					"name": "support.type.variable.default.nss"
				},
				"3": {
					"name": "keyword.control.variable.attribute.nss"
				},
				"4": {
					"name": "comment.inline.nss"
				}
			}
		},
		"variable": {
			"begin": "(\\$\\()",
			"beginCaptures": {
				"1": {
					"name": "keyword.variable.substitutor.nss"
				}
			},
			"end": "(\\))",
			"endCaptures": {
				"1": {
					"name": "keyword.variable.substitutor.nss"
				}
			},
			"patterns": [
				{
					"match": "(?<=\\()(@)?([^|=)]+)(?=\\)|\\|)",
					"captures": {
						"1": {
							"name" : "keyword.other.unit.variable.default.nss"
						},
						"2": {
							"name": "support.type.variable.default.nss"
						}
					}
				},
				{
					"match": "[^|=]+?(?==)",
					"name": "keyword.control.variable.attribute.nss"
				},
				{
					"match": "(?<!\\||=)(?:\\||=)",
					"name": "keyword.variable.substitutor.nss"
				},
				{
					"include": "#variable"
				},
				{
					"include": "#parameter"
				},
				{
					"include": "#css"
				},
				{
					"include": "#other"
				}
			]
		},
		"parameter": {
			"match": "(\\$\\[)(.+?)(\\|.*?)?(?:(\\s//.+$)|(\\]))",
			"captures": {
				"1": {
					"name": "keyword.variable.substitutor.nss"
				},
				"2": {
					"name": "keyword.control.variable.attribute.nss"
				},
				"3": {
					"name": "invalid.illegal.nss"
				},
				"4": {
					"name": "comment.inline.nss"
				},
				"5": {
					"name": "keyword.variable.substitutor.nss"
				}
			}
		},
		"separator": {
			"match": "^\\s*---\\s*$",
			"name": "header.separator.nss"
		},
		"comments": {
			"patterns": [
				{
					"match": "(?<!:)//.+$",
					"name": "comment.inline.nss"
				},
				{
					"match": "/\\*.+\\*/",
					"name": "comment.block.css"
				}
			]
		},
		"css": {
			"patterns": [
				{
					"match": "([^@{}]*){",
					"captures": {
						"1": {
							"name": "entity.other.attribute-name.class.css"
						}
					}
				},
				{
					"match": "([a-z-]+?(?!\\\\)):(?!//)",
					"captures": {
						"1": {
							"name": "support.type.property-name.css"
						},
						"2": {
							"name": "invalid.illegal.css"
						}
					}
				},
				{
					"match": "([a-z-]+)\\s*\\(",
					"captures": {
						"1": {
							"name": "support.function.css"
						}
					}
				},
				{
					"match": "@[a-z-]+",
					"name": "keyword.control.at-rule"
				},
				{
					"match": "'[^']*?[^\\\\]'|\\\"[^\"]*?[^\\\\]\\\"|\\\"\\\"|''",
					"name": "string.quoted"
				},
				{
					"match": "#[0-9a-fA-F]{8}(?![0-9a-fA-F])|#[0-9a-fA-F]{6}(?![0-9a-fA-F])|#[0-9a-fA-F]{3,4}(?![0-9a-fA-F])",
					"name": "string.unquoted.color.hash.css"
				},
				{
					"match": "#[0-9a-fA-F]{9,}|#[0-9a-fA-F]{7}|#[0-9a-fA-F]{5}|#[0-9a-fA-F]{1,2}",
					"name": "invalid.color.hash.css"
				},
				{
					"match": "!\\s*important",
					"name": "string.regexp"
				}
			]
		},
		"other": {
			"patterns": [
				{
					"match": "[-;,.+*/!%(){}a-zA-Z]",
					"name": "entity.constant.character"
				},
				{
					"match": "[0-9]",
					"name": "constant.numeric.css"
				},
				{
					"match": ".",
					"name": "invalid"
				}
			]
		}
	}
}