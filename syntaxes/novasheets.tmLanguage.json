{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "NovaSheets",
	"scopeName": "source.nss",
	"patterns": [
		{
			"include": "#constant"
		},
		{
			"include": "#variable_declaration"
		},
		{
			"include": "#variable_ending"
		},
		{
			"include": "#variable"
		},
		{
			"include": "#declaration_substitution"
		},
		{
			"include": "#object_getter"
		},
		{
			"include": "#parameter"
		},
		{
			"include": "#separator"
		},
		{
			"include": "#loop_identifier"
		},
		{
			"include": "#comments"
		},
		{
			"include": "#css"
		},
		{
			"include": "#other"
		}
	],
	"repository": {
		"constant": {
			"match": "(@const)(?:(\\s+[A-Z_]+)(\\s+(?:[0-9]+|true|false)))?",
			"captures": {
				"1": {
					"name": "keyword.variable.declarator"
				},
				"2": {
					"name": "support.type.constant.nss"
				},
				"3": {
					"name": "keyword.control.constant.value.nss"
				}
			}
		},
		"variable_declaration": {
			"patterns": [
				{
					"match": "(?<=^\\s*@var.+)//.*$",
					"name": "comment.inline.nss"
				},
				{
					"match": "(@var)\\s+((?:[^|=)\\]](?!\/\/))+)(\\|(?:[^=)\\]](?!\/\/))+)*(=?)",
					"captures": {
						"1": {
							"name": "keyword.variable.declarator"
						},
						"2": {
							"name": "support.type.variable.default.nss"
						},
						"3": {
							"name": "keyword.control.variable.attribute.nss"
						},
						"4": {
							"name": "keyword.variable.declarator"
						}
					}
				}
			]
		},
		"variable_ending": {
			"match": "@endvar",
			"name": "keyword.variable.ending.declarator"
		},
		"variable": {
			"begin": "(\\$\\()",
			"beginCaptures": {
				"1": {
					"name": "constant.character.nss"
				}
			},
			"end": "(\\))",
			"endCaptures": {
				"1": {
					"name": "constant.character.nss"
				}
			},
			"patterns": [
				{
					"match": "(?<=\\()(@)?([^|=)]+)(?=\\)|\\|)",
					"captures": {
						"1": {
							"name": "keyword.other.unit.variable.default.nss"
						},
						"2": {
							"name": "support.type.variable.default.nss"
						}
					}
				},
				{
					"match": "(?<!@.*)[^|=]+?(?==)",
					"name": "keyword.control.variable.attribute.nss"
				},
				{
					"match": "\\|+|(?<!@.*|=)=",
					"name": "constant.character.nss"
				},
				{
					"include": "#variable"
				},
				{
					"include": "#parameter"
				},
				{
					"include": "#css"
				},
				{
					"include": "#other"
				}
			]
		},
		"declaration_substitution": {
			"match": "(\\$<)([\\w.:~+>()]+)(>)",
			"captures": {
				"1": {
					"name": "constant.character.nss"
				},
				"2": {
					"name": "entity.other.attribute-name.class.css"
				},
				"3": {
					"name": "constant.character.nss"
				}
			}
		},
		"object_getter": {
			"match": "(?<=>|})(\\[)(\\w+?)(\\])",
			"captures": {
				"1": {
					"name": "constant.character.nss"
				},
				"2": {
					"name": "support.type.property-name.css"
				},
				"3": {
					"name": "constant.character.nss"
				}
			}
		},
		"parameter": {
			"match": "(\\$\\[)(.+?)(\\|(.*?))?(?:(\\s//.+$)|(\\]))",
			"captures": {
				"1": {
					"name": "constant.character.nss"
				},
				"2": {
					"name": "keyword.control.variable.attribute.nss"
				},
				"3": {
					"name": "constant.character.nss"
				},
				"4": {
					"name": "constant.character.escape.default_argument.nss"
				},
				"5": {
					"name": "comment.inline.nss"
				},
				"6": {
					"name": "constant.character.nss"
				}
			}
		},
		"loop_identifier": {
			"match": "\\$i|\\$v\\[?|(?<=\\$v\\[[^\\]]*?)\\]",
			"name": "keyword.variable.identifier.loop.nss"
		},
		"comments": {
			"patterns": [
				{
					"match": "##!.*",
					"name": "comment.block.documentation"
				},
				{
					"match": "(?<![a-z]+:)//.*$",
					"name": "comment.inline.nss"
				},
				{
					"match": "(/\\*/)(.*?)(/\\*/)",
					"captures": {
						"1": {
							"name": "comment.static.nss"
						},
						"2": {
							"name": "markup.italic.content.nss"
						},
						"3": {
							"name": "comment.static.nss"
						}
					}
				},
				{
					"match": "(/\\*\\[|\\]\\*/)",
					"name": "comment.block.css"
				},
				{
					"match": "/\\*.*?\\*/",
					"name": "comment.block.css"
				}
			]
		},
		"css": {
			"patterns": [
				{
					"match": "[a-z]+://\\w+(\\.\\w+)+(/\\S+?)?(?!\\))",
					"name": "markup.underline.link"
				},
				{
					"match": "([^@{}]*){",
					"captures": {
						"1": {
							"name": "entity.other.attribute-name.class.css"
						}
					}
				},
				{
					"match": "([a-z-]+?(?!\\\\)):(?!//)",
					"captures": {
						"1": {
							"name": "support.type.property-name.css"
						},
						"2": {
							"name": "invalid.illegal.css"
						}
					}
				},
				{
					"match": "([a-z-]+)\\s*\\(",
					"captures": {
						"1": {
							"name": "support.function.css"
						}
					}
				},
				{
					"match": "@[a-z-]+",
					"name": "keyword.control.at-rule"
				},
				{
					"match": "'[^']*?[^\\\\]'|\\\"[^\"]*?[^\\\\]\\\"|\\\"\\\"|''",
					"name": "string.quoted"
				},
				{
					"match": "#[0-9a-fA-F]{8}(?![0-9a-fA-F])|#[0-9a-fA-F]{6}(?![0-9a-fA-F])|#[0-9a-fA-F]{3,4}(?![0-9a-fA-F])",
					"name": "string.unquoted.color.hash.css"
				},
				{
					"match": "#[0-9a-fA-F]{9,}|#[0-9a-fA-F]{7}|#[0-9a-fA-F]{5}|#[0-9a-fA-F]{1,2}",
					"name": "invalid.color.hash.css"
				},
				{
					"match": "!\\s*important",
					"name": "string.regexp.important.css"
				}
			]
		},
		"other": {
			"patterns": [
				{
					"match": "(?<=\\$\\(\\s*@(?:bitwise|boolean|if)[^)]+)(&|\\||!|not|&|and|nand|or|nor|xor|xnor)",
					"name": "support.function.bitwise.nss"
				},
				{
					"match": "\\b(true|false)\\b",
					"name": "keyword.constant.logic.nss"
				},
				{
					"match": "(?<=\\d\\s*)(em|rem|en|ex|px|pt|pc|cm|mm|m|ft|in|%)\\b",
					"name": "constant.numeric.unit.css"
				},
				{
					"match": "\\d+e\\d+",
					"name": "constant.numeric.css"
				},
				{
					"match": "0x[0-9a-f]*\\.?[0-9a-f]+|0b[01]*\\.?[01]+|0o[0-7]*\\.?[0-7]+|[0-9]*\\.?[0-9]+",
					"name": "constant.numeric.css"
				},
				{
					"match": "[-:;,.+~^*/!%(){}a-zA-Z]",
					"name": "entity.constant.character"
				}
			]
		}
	}
}